version: '3.8'
# Servicio de la API REST
services:
  # PostgreSQL
  postgres:
    container_name: pedidos-db_postgres
    image: postgres:12
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - ${POSTGRES_PORT}:5432
    # Si se quiere lanzar un script SQL al iniciar
    #volumes:
    #  - ./database:/var/lib/postgresql/data

  # MongoDB
  mongo:
    container_name: pedidos-db_mongo
    image: mongo:5.0
    restart: always
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DATABASE_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017
    # Si se quiere lanzar un script JS al iniciaro de
    volumes:
      - ./database/tienda.js:/docker-entrypoint-initdb.d/tienda.js:ro

    # Adminer para conectarse a la base de datos
    # Quitar en producción
  adminer:
    container_name: pedidos-db_adminer
    image: adminer
    restart: always
    env_file: .env
    ports:
      - 8080:8080
    depends_on:
      - postgres

  # Mongo Express para conectarse a la base de datos
  # Quitar en producción
  mongo-express:
    container_name: pedidos-db_mongo-express
    image: mongo-express
    restart: always
    env_file: .env
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${DATABASE_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${DATABASE_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo