## PORT
# Cambiamos el puerto de escucha, por defecto es 8080
# e indicamos que lea la variable de entorno PORT si no existe que use 3000
server.port=${PORT:3000}
## API VERSION
# Versionamos la API
api.version=${API_VERSION:v1}
## MENSAJE DE ERROR EN LAS EXCEPCIONES DE LA API
# Para los mensajes en las excepciones
server.error.include-message=always
## BASE DE DATOS
## Base de datos de desarrollo puede ser H2
# En fichero embebida o en memoria, tú eliges
# spring.datasource.url=jdbc:h2:./productosapirest
spring.datasource.url=jdbc:h2:mem:productosapirest
# Usuario y contraseña de la base de datos
spring.datasource.username=sa
#spring.datasource.password=password
# Habilitamos la consola de H2, quitamos en producción
http=//localhost:{server.port}/h2-console
# En nuestro caso http://localhost:3000/h2-console
spring.h2.console.enabled=true
# Habilitamos los mensajes sql en el log para ver las consultas, quitar en producción
spring.jpa.show-sql=true
spring.jpa.open-in-view=true
# Habilitamos que cargue los datos de prueba en la base de datos
# estos datos los carga del fichero data.sql del directorio resources, quitar en producción
spring.jpa.defer-datasource-initialization=true
# Habilitamos la creación de la base de datos en cada arranque, quitar en producción
spring.jpa.hibernate.ddl-auto=create-drop
# Habilitamos la carga de datos de prueba en cada arranque, quitar en producción
spring.sql.init.mode=always
# Habilitamos el dialecto de H2, quitar en producción
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## ALMACENAMIENTO DE FICHEROS
## directorio de almacenamiento
upload.root-location=storage-dir
upload.delete=true
## LOGGING
# Log minimo, si no se especifica, por defecto es INFO
# logging.level.root=DEBUG